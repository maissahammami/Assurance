// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using data.Context1;

namespace data.Migrations
{
    [DbContext(typeof(BibliothequeContext))]
    partial class BibliothequeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("domain.Models.Adherent", b =>
                {
                    b.Property<int>("IDInscrit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateDInscription")
                        .HasColumnType("datetime2");

                    b.Property<int>("FKInscrit")
                        .HasColumnType("int");

                    b.HasKey("IDInscrit");

                    b.HasIndex("FKInscrit")
                        .IsUnique();

                    b.ToTable("Adherents");
                });

            modelBuilder.Entity("domain.Models.Emprunt", b =>
                {
                    b.Property<int>("IDEmprunt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateEmprunt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateRetour")
                        .HasColumnType("datetime2");

                    b.Property<int>("FKAdherent")
                        .HasColumnType("int");

                    b.Property<int>("FKLivre")
                        .HasColumnType("int");

                    b.HasKey("IDEmprunt");

                    b.HasIndex("FKAdherent");

                    b.HasIndex("FKLivre");

                    b.ToTable("Emprunts");
                });

            modelBuilder.Entity("domain.Models.Exemplaire", b =>
                {
                    b.Property<int>("IDExemplaire")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FKLivre")
                        .HasColumnType("int");

                    b.Property<int>("NombreExemplaire")
                        .HasColumnType("int");

                    b.HasKey("IDExemplaire");

                    b.HasIndex("FKLivre");

                    b.ToTable("Exemplaires");
                });

            modelBuilder.Entity("domain.Models.Inscrit", b =>
                {
                    b.Property<int>("IDInscrit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeDInscription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateInscription")
                        .HasColumnType("datetime2");

                    b.Property<int>("FKPersonne")
                        .HasColumnType("int");

                    b.Property<DateTime>("FaitDInscription")
                        .HasColumnType("datetime2");

                    b.HasKey("IDInscrit");

                    b.HasIndex("FKPersonne");

                    b.ToTable("Inscrits");
                });

            modelBuilder.Entity("domain.Models.Livre", b =>
                {
                    b.Property<int>("IDLivre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Auteur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Categorie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateEdition")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Disponibilite")
                        .HasColumnType("bit");

                    b.Property<string>("ISBN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDLivre");

                    b.ToTable("Livres");
                });

            modelBuilder.Entity("domain.Models.Personne", b =>
                {
                    b.Property<int>("IDPersonne")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateDeNaissance")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDPersonne");

                    b.ToTable("Personnes");
                });

            modelBuilder.Entity("domain.Models.Reservation", b =>
                {
                    b.Property<int>("IDReservation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Commentaire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FKLivre")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDReservation");

                    b.HasIndex("FKLivre");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("domain.Models.Adherent", b =>
                {
                    b.HasOne("domain.Models.Inscrit", "Inscrit")
                        .WithOne("Adherent")
                        .HasForeignKey("domain.Models.Adherent", "FKInscrit")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("domain.Models.Emprunt", b =>
                {
                    b.HasOne("domain.Models.Adherent", "Adherent")
                        .WithMany()
                        .HasForeignKey("FKAdherent")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("domain.Models.Livre", "Livre")
                        .WithMany("Emprunts")
                        .HasForeignKey("FKLivre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("domain.Models.Exemplaire", b =>
                {
                    b.HasOne("domain.Models.Livre", "Livre")
                        .WithMany("Exemplaires")
                        .HasForeignKey("FKLivre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("domain.Models.Inscrit", b =>
                {
                    b.HasOne("domain.Models.Personne", "Personne")
                        .WithMany("Inscrits")
                        .HasForeignKey("FKPersonne")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("domain.Models.Reservation", b =>
                {
                    b.HasOne("domain.Models.Livre", "Livre")
                        .WithMany("Reservations")
                        .HasForeignKey("FKLivre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
